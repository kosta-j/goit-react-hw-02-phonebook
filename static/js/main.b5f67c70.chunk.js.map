{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Title/Title.module.css","components/Section/Section.module.css","components/Wrapper/Wrapper.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Title/Title.jsx","components/Section/Section.jsx","components/Wrapper/Wrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","inputTitle","type","input","pattern","title","required","onChange","submitBtn","Component","ContactItem","children","item","ContactList","contacts","onDeleteBtnClick","contactList","map","contact","onClick","id","Filter","Title","Section","section","Wrapper","filter","formSubmitHanler","data","uuidv4","length","alert","prevState","changeFilter","deleteContactHandler","contactID","console","log","normalizedFilter","toLowerCase","filteredContacts","includes","wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,UAAY,+BAA+B,MAAQ,6B,yCCAlHD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mLC4DvCC,E,4MAzDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,kCACE,mBAAGM,UAAWC,IAAEC,WAAhB,kBACA,uBACEC,KAAK,OACLhB,KAAK,OACLa,UAAWC,IAAEG,MACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAOO,KAAKb,MAAMC,KAClBqB,SAAUT,KAAKV,kBAGnB,kCACE,mBAAGW,UAAWC,IAAEC,WAAhB,oBACA,uBACEC,KAAK,MACLhB,KAAK,SACLa,UAAWC,IAAEG,MACbC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRf,MAAOO,KAAKb,MAAME,OAClBoB,SAAUT,KAAKV,kBAGnB,wBAAQc,KAAK,SAASH,UAAWC,IAAEQ,UAAnC,gC,GAlDkBC,a,gBCQXC,MATf,YAAkD,IAA3BxB,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAQwB,EAAY,EAAZA,SACnC,OACE,qBAAIZ,UAAWC,IAAEY,KAAjB,UACG1B,EADH,KACWC,EACRwB,MCsBQE,MAxBf,YAAsD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,iBAC/B,OACE,oBAAIhB,UAAWC,IAAEgB,YAAjB,SACGF,EAASG,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEEhC,KAAMgC,EAAQhC,KACdC,OAAQ+B,EAAQ/B,OAChB4B,iBAAkBA,EAJpB,SAME,wBAAQb,KAAK,SAASiB,QAAS,kBAAMJ,EAAiBG,EAAQE,KAA9D,qBALKF,EAAQE,UCORC,MAdf,YAAsC,IAApB9B,EAAmB,EAAnBA,MAAOgB,EAAY,EAAZA,SACvB,OACE,kCACE,mBAAGR,UAAU,aAAb,mCACA,uBAAOG,KAAK,OAAOX,MAAOA,EAAOgB,SAAUA,Q,iBCAlCe,MAJf,YAA2B,IAAVjB,EAAS,EAATA,MACf,OAAO,oBAAIN,UAAWC,IAAEK,MAAjB,SAAyBA,K,iBCSnBkB,MATf,YAAuC,IAApBlB,EAAmB,EAAnBA,MAAOM,EAAY,EAAZA,SACxB,OACE,0BAASZ,UAAWC,IAAEwB,QAAtB,UACE,cAAC,EAAD,CAAOnB,MAAOA,IACbM,M,iBC8DQc,E,4MA5DbxC,MAAQ,CACN6B,SAAU,GACVY,OAAQ,I,EAGVC,iBAAmB,SAAAC,GACjB,IAAMV,EAAU,CACdE,GAAIS,cACJ3C,KAAM0C,EAAK1C,KACXC,OAAQyC,EAAKzC,QAGf,EAAKF,MAAM6B,SAASY,QAAO,SAAAd,GAAI,OAAIA,EAAK1B,OAAS0C,EAAK1C,QAAM4C,OAAS,EACjEC,MAAM,GAAD,OAAIb,EAAQhC,KAAZ,4BACL,EAAKM,UAAS,SAAAwC,GAAS,MAAK,CAC1BlB,SAAS,GAAD,mBAAMkB,EAAUlB,UAAhB,CAA0BI,S,EAI1Ce,aAAe,SAAA5C,GACb,EAAKG,SAAS,CAAEkC,OAAQrC,EAAEC,cAAcC,S,EAG1C2C,qBAAuB,SAAAC,GACrBC,QAAQC,IAAIF,GACZ,EAAK3C,UAAS,SAAAwC,GAAS,MAAK,CAC1BlB,SAAUkB,EAAUlB,SAASY,QAAO,SAAAd,GAAI,OAAIA,EAAKQ,KAAOe,U,4CAI5D,WACE,MAA6BrC,KAAKb,MAA1B6B,EAAR,EAAQA,SAAUY,EAAlB,EAAkBA,OACZY,EAAmBZ,EAAOa,cAC1BC,EAAmB1B,EAASY,QAAO,SAAAR,GAAO,OAC9CA,EAAQhC,KAAKqD,cAAcE,SAASH,MAGtC,OACE,sBAAKvC,UAAWC,IAAE0C,QAAlB,UACE,cAAC,EAAD,CAASrC,MAAM,YAAf,SACE,cAAC,EAAD,CAAaT,SAAUE,KAAK6B,qBAE9B,cAAC,EAAD,CAAStB,MAAM,WAAf,SACGS,EAASgB,OAAS,EACjB,sDAEA,qCACE,cAAC,EAAD,CAAQvC,MAAOmC,EAAQnB,SAAUT,KAAKmC,eACtC,cAAC,EAAD,CACEnB,SAAU0B,EACVzB,iBAAkBjB,KAAKoC,mC,GAnDjBzB,aCFPkC,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5f67c70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"ContactForm_inputTitle__KZkTD\",\"submitBtn\":\"ContactForm_submitBtn__1WpS2\",\"input\":\"ContactForm_input__Tzh7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__11m6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1h8Bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Wrapper_list__KjSF0\",\"link\":\"Wrapper_link__35BLz\"};","import { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          <p className={s.inputTitle}>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className={s.inputTitle}>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.submitBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from './ContactList.module.css';\r\n\r\nfunction ContactItem({ name, number, children }) {\r\n  return (\r\n    <li className={s.item}>\r\n      {name}: {number}\r\n      {children}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteBtnClick }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDeleteBtnClick={onDeleteBtnClick}\r\n        >\r\n          <button type=\"button\" onClick={() => onDeleteBtnClick(contact.id)}>\r\n            Delete\r\n          </button>\r\n        </ContactItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteBtnClick: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <p className=\"inputTitle\">Find contacts by name</p>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import s from './Title.module.css';\r\n\r\nfunction Title({ title }) {\r\n  return <h2 className={s.title}>{title}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import Title from '../Title/Title';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <Title title={title} />\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport Section from '../Section/Section';\r\nimport s from './Wrapper.module.css';\r\n\r\nclass Wrapper extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  formSubmitHanler = data => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n\r\n    this.state.contacts.filter(item => item.name === data.name).length > 0\r\n      ? alert(`${contact.name} is already in contacts`)\r\n      : this.setState(prevState => ({\r\n          contacts: [...prevState.contacts, contact],\r\n        }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContactHandler = contactID => {\r\n    console.log(contactID);\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(item => item.id !== contactID),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const filteredContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onSubmit={this.formSubmitHanler} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length < 1 ? (\r\n            <p>Contact list is empty</p>\r\n          ) : (\r\n            <>\r\n              <Filter value={filter} onChange={this.changeFilter} />\r\n              <ContactList\r\n                contacts={filteredContacts}\r\n                onDeleteBtnClick={this.deleteContactHandler}\r\n              />\r\n            </>\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","import Wrapper from \"./components/Wrapper/Wrapper\";\n\nfunction App() {\n  return <Wrapper />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}